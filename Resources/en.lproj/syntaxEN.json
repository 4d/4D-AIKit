{
	"_method_": {},
	"cs.ai": {
		"OpenAIChatCompletionParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModel": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_OpenAIAsyncOptions": {
			"new()": {
				"Syntax": "**.new**( *options* : Object; *client* : cs.ai.OpenAI; *parameters* : cs.ai.OpenAIChatCompletionParameters; *result* : cs.ai.OpenAIResult )",
				"Params": [
					[
						"options",
						"Object",
						"->"
					],
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					],
					[
						"parameters",
						"cs.ai.OpenAIChatCompletionParameters",
						"->"
					],
					[
						"result",
						"cs.ai.OpenAIResult",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAICompletionsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImageParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModerationItem": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsMessagesParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImagesAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIVision": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.ai.OpenAIChatAPI )",
				"Params": [
					[
						"chat",
						"cs.ai.OpenAIChatAPI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsListParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsMessagesAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModeration": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsStreamResult": {
			"new()": {
				"Syntax": "**.new**( *request* : 4D.HTTPRequest; *data* : 4D.Blob )",
				"Params": [
					[
						"request",
						"4D.HTTPRequest",
						"->"
					],
					[
						"data",
						"4D.Blob",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatHelper": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.ai.OpenAIChatAPI; *systemPrompt* : Text; *parameters* : cs.ai.OpenAIChatCompletionParameters )",
				"Params": [
					[
						"chat",
						"cs.ai.OpenAIChatAPI",
						"->"
					],
					[
						"systemPrompt",
						"Text",
						"->"
					],
					[
						"parameters",
						"cs.ai.OpenAIChatCompletionParameters",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletions": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIMessage": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIAPIResource": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAI": {
			"new()": {
				"Syntax": "**.new**( *...* : Variant )",
				"Params": [
					[
						"",
						"Variant",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIVisionHelper": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.ai.OpenAIChatAPI; *imageURL* : Text )",
				"Params": [
					[
						"chat",
						"cs.ai.OpenAIChatAPI",
						"->"
					],
					[
						"imageURL",
						"Text",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_ImageUtils": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIModelsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImage": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_Env": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIChoice": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModerationsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.ai.OpenAI )",
				"Params": [
					[
						"client",
						"cs.ai.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAICompletionParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		}
	},
	"OpenAIChatCompletionParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"store": {
			"Syntax": "store : Boolean"
		},
		"stream": {
			"Syntax": "stream : Boolean"
		},
		"temperature": {
			"Syntax": "temperature : Real"
		},
		"n": {
			"Syntax": "n : Integer"
		},
		"max_completion_tokens": {
			"Syntax": "max_completion_tokens : Integer"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIModel": {
		"owned_by": {
			"Syntax": "owned_by : Text"
		},
		"created": {
			"Syntax": "created : Integer"
		},
		"object": {
			"Syntax": "object : Text"
		},
		"id": {
			"Syntax": "id : Text"
		}
	},
	"OpenAIResult": {
		"get errors()": {
			"Syntax": "**.get errors**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get success()": {
			"Syntax": "**.get success**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"request": {
			"Syntax": "request : 4D.HTTPRequest"
		}
	},
	"_OpenAIAsyncOptions": {
		"onData()": {
			"Syntax": "**.onData**( *request* : 4D.HTTPRequest; *event* : Object )",
			"Params": [
				[
					"request",
					"4D.HTTPRequest",
					"->"
				],
				[
					"event",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"onTerminate()": {
			"Syntax": "**.onTerminate**( *request* : 4D.HTTPRequest; *event* : Object )",
			"Params": [
				[
					"request",
					"4D.HTTPRequest",
					"->"
				],
				[
					"event",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"result": {
			"Syntax": "result : cs.ai.OpenAIResult"
		},
		"parameters": {
			"Syntax": "parameters : cs.ai.OpenAIChatCompletionParameters"
		},
		"headers": {
			"Syntax": "headers : Object"
		},
		"body": {
			"Syntax": "body : Variant"
		},
		"timeout": {
			"Syntax": "timeout : Integer"
		},
		"client": {
			"Syntax": "client : cs.ai.OpenAI"
		},
		"dataType": {
			"Syntax": "dataType : Text"
		},
		"method": {
			"Syntax": "method : Text"
		}
	},
	"OpenAICompletionsAPI": {
		"create()": {
			"Syntax": "**.create**( *prompt* : Text; *parameters* : cs.ai.OpenAICompletionParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAICompletionParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIImageParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"response_format": {
			"Syntax": "response_format : Text"
		},
		"style": {
			"Syntax": "style : Text"
		},
		"n": {
			"Syntax": "n : Integer"
		},
		"size": {
			"Syntax": "size : Text"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIModerationItem": {
		"category_score": {
			"Syntax": "category_score : Object"
		},
		"flagged": {
			"Syntax": "flagged : Boolean"
		},
		"categories": {
			"Syntax": "categories : Object"
		}
	},
	"OpenAIModelResult": {
		"get model()": {
			"Syntax": "**.get model**() : cs.ai.OpenAIModel",
			"Params": [
				[
					"",
					"cs.ai.OpenAIModel",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIChatCompletionsMessagesParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"order": {
			"Syntax": "order : Text"
		},
		"limit": {
			"Syntax": "limit : Integer"
		},
		"after": {
			"Syntax": "after : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIImagesAPI": {
		"generate()": {
			"Syntax": "**.generate**( *prompt* : Text; *parameters* : cs.ai.OpenAIImageParameters ) : cs.ai.OpenAIImagesResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIImageParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIImagesResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIChatCompletionsResult": {
		"get choice()": {
			"Syntax": "**.get choice**() : cs.ai.OpenAIChoice",
			"Params": [
				[
					"",
					"cs.ai.OpenAIChoice",
					"<-"
				]
			],
			"Summary": ""
		},
		"get choices()": {
			"Syntax": "**.get choices**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIVision": {
		"create()": {
			"Syntax": "**.create**( *imageURL* : Text ) : cs.ai.OpenAIVisionHelper",
			"Params": [
				[
					"imageURL",
					"Text",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIVisionHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"chat": {
			"Syntax": "chat : cs.ai.OpenAIChatAPI"
		}
	},
	"OpenAIChatCompletionsListParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"model": {
			"Syntax": "model : Text"
		},
		"metadata": {
			"Syntax": "metadata : Text"
		},
		"order": {
			"Syntax": "order : Text"
		},
		"limit": {
			"Syntax": "limit : Integer"
		},
		"after": {
			"Syntax": "after : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIChatCompletionsMessagesAPI": {
		"list()": {
			"Syntax": "**.list**( *completionID* : Text; *parameters* : cs.ai.OpenAIChatCompletionsMessagesParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIChatCompletionsMessagesParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIModeration": {
		"get item()": {
			"Syntax": "**.get item**() : cs.ai.OpenAIModerationItem",
			"Params": [
				[
					"",
					"cs.ai.OpenAIModerationItem",
					"<-"
				]
			],
			"Summary": ""
		},
		"results": {
			"Syntax": "results : Collection"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"id": {
			"Syntax": "id : Text"
		}
	},
	"OpenAIChatCompletionsStreamResult": {
		"get choices()": {
			"Syntax": "**.get choices**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get choice()": {
			"Syntax": "**.get choice**() : cs.ai.OpenAIChoice",
			"Params": [
				[
					"",
					"cs.ai.OpenAIChoice",
					"<-"
				]
			],
			"Summary": ""
		},
		"get errors()": {
			"Syntax": "**.get errors**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get success()": {
			"Syntax": "**.get success**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"data": {
			"Syntax": "data : Object"
		},
		"request": {
			"Syntax": "request : 4D.HTTPRequest"
		}
	},
	"OpenAIChatHelper": {
		"prompt()": {
			"Syntax": "**.prompt**( *prompt* : Text ) : cs.ai.OpenAIChatCompletionsResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"parameters": {
			"Syntax": "parameters : cs.ai.OpenAIChatCompletionParameters"
		},
		"numberOfMessage": {
			"Syntax": "numberOfMessage : Integer"
		},
		"systemPrompt": {
			"Syntax": "systemPrompt : cs.ai.Message"
		},
		"messages": {
			"Syntax": "messages : Collection"
		},
		"chat": {
			"Syntax": "chat : cs.ai.OpenAIChatAPI"
		}
	},
	"OpenAIChatCompletions": {
		"delete()": {
			"Syntax": "**.delete**( *completionID* : Text; *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"list()": {
			"Syntax": "**.list**( *parameters* : cs.ai.OpenAIChatCompletionsListParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"parameters",
					"cs.ai.OpenAIChatCompletionsListParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"update()": {
			"Syntax": "**.update**( *completionID* : Text; *metadata* : Object; *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"metadata",
					"Object",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"retrieve()": {
			"Syntax": "**.retrieve**( *completionID* : Text; *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"create()": {
			"Syntax": "**.create**( *messages* : Collection; *parameters* : cs.ai.OpenAIChatCompletionParameters ) : cs.ai.OpenAIChatCompletionsResult",
			"Params": [
				[
					"messages",
					"Collection",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIChatCompletionParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"messages": {
			"Syntax": "messages : cs.ai.OpenAIChatCompletionsMessagesAPI"
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIMessage": {
		"addImageURL()": {
			"Syntax": "**.addImageURL**( *imageURL* : Text; *detail* : Text )",
			"Params": [
				[
					"imageURL",
					"Text",
					"->"
				],
				[
					"detail",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"set text()": {
			"Syntax": "**.set text**( *text* : Text )",
			"Params": [
				[
					"text",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"get text()": {
			"Syntax": "**.get text**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"user": {
			"Syntax": "user : Text"
		},
		"content": {
			"Syntax": "content : Variant"
		},
		"role": {
			"Syntax": "role : Text"
		}
	},
	"OpenAIAPIResource": {},
	"OpenAI": {
		"project": {
			"Syntax": "project : Text"
		},
		"organization": {
			"Syntax": "organization : Text"
		},
		"baseURL": {
			"Syntax": "baseURL : Text"
		},
		"apiKey": {
			"Syntax": "apiKey : Text"
		},
		"timeout": {
			"Syntax": "timeout : Real"
		},
		"models": {
			"Syntax": "models : cs.ai.OpenAIModelsAPI"
		},
		"moderations": {
			"Syntax": "moderations : cs.ai.OpenAIModerationsAPI"
		},
		"completions": {
			"Syntax": "completions : cs.ai.OpenAICompletionsAPI"
		},
		"images": {
			"Syntax": "images : cs.ai.OpenAIImagesAPI"
		},
		"chat": {
			"Syntax": "chat : cs.ai.OpenAIChatAPI"
		}
	},
	"OpenAIVisionHelper": {
		"prompt()": {
			"Syntax": "**.prompt**( *prompt* : Text; *parameters* : cs.ai.OpenAIChatCompletionParameters ) : cs.ai.OpenAIChatCompletionsResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIChatCompletionParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"imageURL": {
			"Syntax": "imageURL : Text"
		},
		"chat": {
			"Syntax": "chat : cs.ai.OpenAIChatAPI"
		}
	},
	"OpenAIChatAPI": {
		"create()": {
			"Syntax": "**.create**( *systemPrompt* : Text; *parameters* : cs.ai.OpenAIChatCompletionParameters ) : cs.ai.OpenAIChatHelper",
			"Params": [
				[
					"systemPrompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIChatCompletionParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIChatHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"vision": {
			"Syntax": "vision : cs.ai.OpenAIVision"
		},
		"completions": {
			"Syntax": "completions : cs.ai.OpenAIChatCompletions"
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"_ImageUtils": {
		"toFormData()": {
			"Syntax": "**.toFormData**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"toBlob()": {
			"Syntax": "**.toBlob**( *imageInfo* : Variant ) : 4D.Blob",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"toInlinedPng()": {
			"Syntax": "**.toInlinedPng**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"httpURLToBlob()": {
			"Syntax": "**.httpURLToBlob**( *url* : Text ) : 4D.Blob",
			"Params": [
				[
					"url",
					"Text",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"toBase64()": {
			"Syntax": "**.toBase64**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"base64ToBlob()": {
			"Syntax": "**.base64ToBlob**( *base64* : Text ) : 4D.Blob",
			"Params": [
				[
					"base64",
					"Text",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"OpenAIModerationResult": {
		"get moderation()": {
			"Syntax": "**.get moderation**() : cs.ai.OpenAIModeration",
			"Params": [
				[
					"",
					"cs.ai.OpenAIModeration",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIModelsAPI": {
		"list()": {
			"Syntax": "**.list**( *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIModelListResult",
			"Params": [
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIModelListResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"retrieve()": {
			"Syntax": "**.retrieve**( *model* : Text; *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIModelResult",
			"Params": [
				[
					"model",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIModelResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIImage": {
		"saveToDisk()": {
			"Syntax": "**.saveToDisk**( *file* : 4D.File ) : Boolean",
			"Params": [
				[
					"file",
					"4D.File",
					"->"
				],
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"asPicture()": {
			"Syntax": "**.asPicture**() : Picture",
			"Params": [
				[
					"",
					"Picture",
					"<-"
				]
			],
			"Summary": ""
		},
		"asBlob()": {
			"Syntax": "**.asBlob**() : 4D.Blob",
			"Params": [
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"revised_prompt": {
			"Syntax": "revised_prompt : Variant"
		},
		"b64_json": {
			"Syntax": "b64_json : Text"
		},
		"url": {
			"Syntax": "url : Text"
		}
	},
	"_Env": {},
	"OpenAIChoice": {
		"delta": {
			"Syntax": "delta : cs.ai.OpenAIMessage"
		},
		"index": {
			"Syntax": "index : Integer"
		},
		"message": {
			"Syntax": "message : cs.ai.OpenAIMessage"
		},
		"finish_reason": {
			"Syntax": "finish_reason : Text"
		}
	},
	"OpenAIModerationsAPI": {
		"create()": {
			"Syntax": "**.create**( *input* : Variant; *model* : Text; *parameters* : cs.ai.OpenAIParameters ) : cs.ai.OpenAIModerationResult",
			"Params": [
				[
					"input",
					"Variant",
					"->"
				],
				[
					"model",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.ai.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.ai.OpenAIModerationResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"user": {
			"Syntax": "user : Text"
		},
		"worker": {
			"Syntax": "worker : Variant"
		},
		"timeout": {
			"Syntax": "timeout : Real"
		},
		"formulaWindow": {
			"Syntax": "formulaWindow : Integer"
		},
		"formulaWorker": {
			"Syntax": "formulaWorker : Variant"
		},
		"formula": {
			"Syntax": "formula : 4D.Function"
		}
	},
	"OpenAICompletionParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"temperature": {
			"Syntax": "temperature : Real"
		},
		"n": {
			"Syntax": "n : Integer"
		},
		"max_tokens": {
			"Syntax": "max_tokens : Integer"
		},
		"echo": {
			"Syntax": "echo : Boolean"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIModelListResult": {
		"get models()": {
			"Syntax": "**.get models**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIImagesResult": {
		"saveImagesToDisk()": {
			"Syntax": "**.saveImagesToDisk**( *folder* : 4D.Folder; *prefix* : Text ) : Boolean",
			"Params": [
				[
					"folder",
					"4D.Folder",
					"->"
				],
				[
					"prefix",
					"Text",
					"->"
				],
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get image()": {
			"Syntax": "**.get image**() : cs.ai.OpenAIImage",
			"Params": [
				[
					"",
					"cs.ai.OpenAIImage",
					"<-"
				]
			],
			"Summary": ""
		},
		"get images()": {
			"Syntax": "**.get images**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	}
}