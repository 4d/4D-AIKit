{
	"_method_": {},
	"cs.AIKit": {
		"OpenAIModerationItem": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsMessagesParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImageParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIMessage": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAI": {
			"new()": {
				"Syntax": "**.new**( *...* : Variant )",
				"Params": [
					[
						"",
						"Variant",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIError": {
			"new()": {
				"Syntax": "**.new**( *response* : Object; *body* : Object )",
				"Params": [
					[
						"response",
						"Object",
						"->"
					],
					[
						"body",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImagesAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_ImageUtils": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIModel": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAITool": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsStreamResult": {
			"new()": {
				"Syntax": "**.new**( *request* : 4D.HTTPRequest; *body* : Variant; *terminated* : Boolean )",
				"Params": [
					[
						"request",
						"4D.HTTPRequest",
						"->"
					],
					[
						"body",
						"Variant",
						"->"
					],
					[
						"terminated",
						"Boolean",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModeration": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIImage": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_TestSignal": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIChatAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsMessagesAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatHelper": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.AIKit.OpenAIChatAPI; *systemPrompt* : Text; *parameters* : cs.AIKit.OpenAIChatCompletionsParameters )",
				"Params": [
					[
						"chat",
						"cs.AIKit.OpenAIChatAPI",
						"->"
					],
					[
						"systemPrompt",
						"Text",
						"->"
					],
					[
						"parameters",
						"cs.AIKit.OpenAIChatCompletionsParameters",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_TestModels": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChoice": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIAPIResource": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIVision": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.AIKit.OpenAIChatAPI )",
				"Params": [
					[
						"chat",
						"cs.AIKit.OpenAIChatAPI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIVisionHelper": {
			"new()": {
				"Syntax": "**.new**( *chat* : cs.AIKit.OpenAIChatAPI; *imageData* : Variant )",
				"Params": [
					[
						"chat",
						"cs.AIKit.OpenAIChatAPI",
						"->"
					],
					[
						"imageData",
						"Variant",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIEmbeddingsParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_OpenAIAsyncOptions": {
			"new()": {
				"Syntax": "**.new**( *options* : Object; *client* : cs.AIKit.OpenAI; *parameters* : cs.AIKit.OpenAIChatCompletionsParameters; *result* : cs.AIKit.OpenAIResult )",
				"Params": [
					[
						"options",
						"Object",
						"->"
					],
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					],
					[
						"parameters",
						"cs.AIKit.OpenAIChatCompletionsParameters",
						"->"
					],
					[
						"result",
						"cs.AIKit.OpenAIResult",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_FormDemo": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"_Env": {
			"new()": {
				"Syntax": "**.new**()",
				"Params": [],
				"Summary": ""
			}
		},
		"OpenAIEmbedding": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModelsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIChatCompletionsListParameters": {
			"new()": {
				"Syntax": "**.new**( *object* : Object )",
				"Params": [
					[
						"object",
						"Object",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIEmbeddingsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		},
		"OpenAIModerationsAPI": {
			"new()": {
				"Syntax": "**.new**( *client* : cs.AIKit.OpenAI )",
				"Params": [
					[
						"client",
						"cs.AIKit.OpenAI",
						"->"
					]
				],
				"Summary": ""
			}
		}
	},
	"OpenAIModerationItem": {
		"category_score": {
			"Syntax": "category_score : Object"
		},
		"flagged": {
			"Syntax": "flagged : Boolean"
		},
		"categories": {
			"Syntax": "categories : Object"
		}
	},
	"OpenAIChatCompletionsMessagesParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"order": {
			"Syntax": "order : Text"
		},
		"limit": {
			"Syntax": "limit : Integer"
		},
		"after": {
			"Syntax": "after : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIImageParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"style": {
			"Syntax": "style : Text"
		},
		"size": {
			"Syntax": "size : Text"
		},
		"n": {
			"Syntax": "n : Integer"
		},
		"response_format": {
			"Syntax": "response_format : Text"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIMessage": {
		"addImageURL()": {
			"Syntax": "**.addImageURL**( *imageURL* : Text; *detail* : Text )",
			"Params": [
				[
					"imageURL",
					"Text",
					"->"
				],
				[
					"detail",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"set text()": {
			"Syntax": "**.set text**( *text* : Text )",
			"Params": [
				[
					"text",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"get text()": {
			"Syntax": "**.get text**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"tool_calls": {
			"Syntax": "tool_calls : Collection"
		},
		"tool_call_id": {
			"Syntax": "tool_call_id : Text"
		},
		"user": {
			"Syntax": "user : Text"
		},
		"content": {
			"Syntax": "content : Variant"
		},
		"role": {
			"Syntax": "role : Text"
		}
	},
	"OpenAI": {
		"customHeaders": {
			"Syntax": "customHeaders : Object"
		},
		"organization": {
			"Syntax": "organization : Text"
		},
		"httpAgent": {
			"Syntax": "httpAgent : 4D.HTTPAgent"
		},
		"apiKey": {
			"Syntax": "apiKey : Text"
		},
		"models": {
			"Syntax": "models : cs.AIKit.OpenAIModelsAPI"
		},
		"timeout": {
			"Syntax": "timeout : Real"
		},
		"embeddings": {
			"Syntax": "embeddings : cs.AIKit.OpenAIEmbeddingsAPI"
		},
		"maxRetries": {
			"Syntax": "maxRetries : Integer"
		},
		"moderations": {
			"Syntax": "moderations : cs.AIKit.OpenAIModerationsAPI"
		},
		"baseURL": {
			"Syntax": "baseURL : Text"
		},
		"project": {
			"Syntax": "project : Text"
		},
		"images": {
			"Syntax": "images : cs.AIKit.OpenAIImagesAPI"
		},
		"chat": {
			"Syntax": "chat : cs.AIKit.OpenAIChatAPI"
		}
	},
	"OpenAIError": {
		"get isInternalServerError()": {
			"Syntax": "**.get isInternalServerError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isUnprocessableEntityError()": {
			"Syntax": "**.get isUnprocessableEntityError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isNotFoundError()": {
			"Syntax": "**.get isNotFoundError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isPermissionDeniedError()": {
			"Syntax": "**.get isPermissionDeniedError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isBadRequestError()": {
			"Syntax": "**.get isBadRequestError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isAuthenticationError()": {
			"Syntax": "**.get isAuthenticationError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get status()": {
			"Syntax": "**.get status**() : Integer",
			"Params": [
				[
					"",
					"Integer",
					"<-"
				]
			],
			"Summary": ""
		},
		"get code()": {
			"Syntax": "**.get code**() : Variant",
			"Params": [
				[
					"",
					"Variant",
					"<-"
				]
			],
			"Summary": ""
		},
		"get statusText()": {
			"Syntax": "**.get statusText**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get param()": {
			"Syntax": "**.get param**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headers()": {
			"Syntax": "**.get headers**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"get type()": {
			"Syntax": "**.get type**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get isRateLimitError()": {
			"Syntax": "**.get isRateLimitError**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get requestID()": {
			"Syntax": "**.get requestID**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"response": {
			"Syntax": "response : Object"
		},
		"body": {
			"Syntax": "body : Object"
		},
		"message": {
			"Syntax": "message : Text"
		},
		"errCode": {
			"Syntax": "errCode : Integer"
		}
	},
	"OpenAIImagesAPI": {
		"generate()": {
			"Syntax": "**.generate**( *prompt* : Text; *parameters* : cs.AIKit.OpenAIImageParameters ) : cs.AIKit.OpenAIImagesResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIImageParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIImagesResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"_ImageUtils": {
		"toFormData()": {
			"Syntax": "**.toFormData**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"base64ToBlob()": {
			"Syntax": "**.base64ToBlob**( *base64* : Text ) : 4D.Blob",
			"Params": [
				[
					"base64",
					"Text",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"toInlinedPng()": {
			"Syntax": "**.toInlinedPng**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"toBase64()": {
			"Syntax": "**.toBase64**( *imageInfo* : Variant ) : Text",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"toBlob()": {
			"Syntax": "**.toBlob**( *imageInfo* : Variant ) : 4D.Blob",
			"Params": [
				[
					"imageInfo",
					"Variant",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"httpURLToBlob()": {
			"Syntax": "**.httpURLToBlob**( *url* : Text ) : 4D.Blob",
			"Params": [
				[
					"url",
					"Text",
					"->"
				],
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		}
	},
	"OpenAIModelResult": {
		"get model()": {
			"Syntax": "**.get model**() : cs.AIKit.OpenAIModel",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIModel",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIModel": {
		"owned_by": {
			"Syntax": "owned_by : Text"
		},
		"object": {
			"Syntax": "object : Text"
		},
		"created": {
			"Syntax": "created : Integer"
		},
		"id": {
			"Syntax": "id : Text"
		}
	},
	"OpenAITool": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"parameters": {
			"Syntax": "parameters : Object"
		},
		"description": {
			"Syntax": "description : Text"
		},
		"name": {
			"Syntax": "name : Text"
		},
		"strict": {
			"Syntax": "strict : Boolean"
		},
		"type": {
			"Syntax": "type : Text"
		}
	},
	"OpenAIChatCompletionsStreamResult": {
		"get usage()": {
			"Syntax": "**.get usage**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"get choices()": {
			"Syntax": "**.get choices**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get terminated()": {
			"Syntax": "**.get terminated**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get choice()": {
			"Syntax": "**.get choice**() : cs.AIKit.OpenAIChoice",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIChoice",
					"<-"
				]
			],
			"Summary": ""
		},
		"get errors()": {
			"Syntax": "**.get errors**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get success()": {
			"Syntax": "**.get success**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"data": {
			"Syntax": "data : Object"
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIChatCompletionsAPI": {
		"list()": {
			"Syntax": "**.list**( *parameters* : cs.AIKit.OpenAIChatCompletionsListParameters ) : cs.AIKit.OpenAIResult",
			"Params": [
				[
					"parameters",
					"cs.AIKit.OpenAIChatCompletionsListParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"delete()": {
			"Syntax": "**.delete**( *completionID* : Text; *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"update()": {
			"Syntax": "**.update**( *completionID* : Text; *metadata* : Object; *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"metadata",
					"Object",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"retrieve()": {
			"Syntax": "**.retrieve**( *completionID* : Text; *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"create()": {
			"Syntax": "**.create**( *messages* : Collection; *parameters* : cs.AIKit.OpenAIChatCompletionsParameters ) : cs.AIKit.OpenAIChatCompletionsResult",
			"Params": [
				[
					"messages",
					"Collection",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIChatCompletionsParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"messages": {
			"Syntax": "messages : cs.AIKit.OpenAIChatCompletionsMessagesAPI"
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIModeration": {
		"get item()": {
			"Syntax": "**.get item**() : cs.AIKit.OpenAIModerationItem",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIModerationItem",
					"<-"
				]
			],
			"Summary": ""
		},
		"results": {
			"Syntax": "results : Collection"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"id": {
			"Syntax": "id : Text"
		}
	},
	"OpenAIImage": {
		"saveToDisk()": {
			"Syntax": "**.saveToDisk**( *file* : 4D.File ) : Boolean",
			"Params": [
				[
					"file",
					"4D.File",
					"->"
				],
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"asPicture()": {
			"Syntax": "**.asPicture**() : Picture",
			"Params": [
				[
					"",
					"Picture",
					"<-"
				]
			],
			"Summary": ""
		},
		"asBlob()": {
			"Syntax": "**.asBlob**() : 4D.Blob",
			"Params": [
				[
					"",
					"4D.Blob",
					"<-"
				]
			],
			"Summary": ""
		},
		"revised_prompt": {
			"Syntax": "revised_prompt : Variant"
		},
		"b64_json": {
			"Syntax": "b64_json : Text"
		},
		"url": {
			"Syntax": "url : Text"
		}
	},
	"_TestSignal": {
		"pushChunk()": {
			"Syntax": "**.pushChunk**( *result* : cs.AIKit.OpenAIResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIResult",
					"->"
				]
			],
			"Summary": ""
		},
		"trigger()": {
			"Syntax": "**.trigger**( *result* : cs.AIKit.OpenAIResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIResult",
					"->"
				]
			],
			"Summary": ""
		},
		"wait()": {
			"Syntax": "**.wait**( *time* : Integer )",
			"Params": [
				[
					"time",
					"Integer",
					"->"
				]
			],
			"Summary": ""
		},
		"reset()": {
			"Syntax": "**.reset**()",
			"Params": [],
			"Summary": ""
		},
		"init()": {
			"Syntax": "**.init**()",
			"Params": [],
			"Summary": ""
		},
		"chunks": {
			"Syntax": "chunks : Collection"
		},
		"signal": {
			"Syntax": "signal : 4D.Signal"
		},
		"result": {
			"Syntax": "result : cs.AIKit.OpenAIResult"
		}
	},
	"OpenAIChatAPI": {
		"create()": {
			"Syntax": "**.create**( *systemPrompt* : Text; *parameters* : cs.AIKit.OpenAIChatCompletionsParameters ) : cs.AIKit.OpenAIChatHelper",
			"Params": [
				[
					"systemPrompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIChatCompletionsParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIChatHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"vision": {
			"Syntax": "vision : cs.AIKit.OpenAIVision"
		},
		"completions": {
			"Syntax": "completions : cs.AIKit.OpenAIChatCompletionsAPI"
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIChatCompletionsMessagesAPI": {
		"list()": {
			"Syntax": "**.list**( *completionID* : Text; *parameters* : cs.AIKit.OpenAIChatCompletionsMessagesParameters ) : cs.AIKit.OpenAIResult",
			"Params": [
				[
					"completionID",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIChatCompletionsMessagesParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIChatHelper": {
		"unregisterTool()": {
			"Syntax": "**.unregisterTool**( *functionName* : Text )",
			"Params": [
				[
					"functionName",
					"Text",
					"->"
				]
			],
			"Summary": ""
		},
		"registerTools()": {
			"Syntax": "**.registerTools**( *toolsWithHandlers* : Variant )",
			"Params": [
				[
					"toolsWithHandlers",
					"Variant",
					"->"
				]
			],
			"Summary": ""
		},
		"reset()": {
			"Syntax": "**.reset**()",
			"Params": [],
			"Summary": ""
		},
		"prompt()": {
			"Syntax": "**.prompt**( *prompt* : Text ) : cs.AIKit.OpenAIChatCompletionsResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"unregisterTools()": {
			"Syntax": "**.unregisterTools**()",
			"Params": [],
			"Summary": ""
		},
		"registerTool()": {
			"Syntax": "**.registerTool**( *tool* : Object; *handler* : Object )",
			"Params": [
				[
					"tool",
					"Object",
					"->"
				],
				[
					"handler",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"autoHandleToolCalls": {
			"Syntax": "autoHandleToolCalls : Boolean"
		},
		"lastErrors": {
			"Syntax": "lastErrors : Collection"
		},
		"tools": {
			"Syntax": "tools : Collection"
		},
		"numberOfMessages": {
			"Syntax": "numberOfMessages : Integer"
		},
		"chat": {
			"Syntax": "chat : cs.AIKit.OpenAIChatAPI"
		},
		"parameters": {
			"Syntax": "parameters : cs.AIKit.OpenAIChatCompletionsParameters"
		},
		"messages": {
			"Syntax": "messages : Collection"
		},
		"systemPrompt": {
			"Syntax": "systemPrompt : cs.AIKit.OpenAIMessage"
		}
	},
	"OpenAIResult": {
		"get usage()": {
			"Syntax": "**.get usage**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"get headers()": {
			"Syntax": "**.get headers**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"throw()": {
			"Syntax": "**.throw**()",
			"Params": [],
			"Summary": ""
		},
		"get rateLimit()": {
			"Syntax": "**.get rateLimit**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"get terminated()": {
			"Syntax": "**.get terminated**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get errors()": {
			"Syntax": "**.get errors**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get success()": {
			"Syntax": "**.get success**() : Boolean",
			"Params": [
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"request": {
			"Syntax": "request : 4D.HTTPRequest"
		}
	},
	"OpenAIChatCompletionsResult": {
		"get choice()": {
			"Syntax": "**.get choice**() : cs.AIKit.OpenAIChoice",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIChoice",
					"<-"
				]
			],
			"Summary": ""
		},
		"get choices()": {
			"Syntax": "**.get choices**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"_TestModels": {
		"moderation": {
			"Syntax": "moderation : Text"
		},
		"images": {
			"Syntax": "images : Text"
		},
		"chats": {
			"Syntax": "chats : Text"
		},
		"embeddings": {
			"Syntax": "embeddings : Text"
		}
	},
	"OpenAIChoice": {
		"delta": {
			"Syntax": "delta : cs.AIKit.OpenAIMessage"
		},
		"message": {
			"Syntax": "message : cs.AIKit.OpenAIMessage"
		},
		"index": {
			"Syntax": "index : Integer"
		},
		"finish_reason": {
			"Syntax": "finish_reason : Text"
		}
	},
	"OpenAIAPIResource": {},
	"OpenAIVision": {
		"fromPicture()": {
			"Syntax": "**.fromPicture**( *image* : Picture ) : cs.AIKit.OpenAIVisionHelper",
			"Params": [
				[
					"image",
					"Picture",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIVisionHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"fromFile()": {
			"Syntax": "**.fromFile**( *imageFile* : 4D.File ) : cs.AIKit.OpenAIVisionHelper",
			"Params": [
				[
					"imageFile",
					"4D.File",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIVisionHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"create()": {
			"Syntax": "**.create**( *imageURL* : Text ) : cs.AIKit.OpenAIVisionHelper",
			"Params": [
				[
					"imageURL",
					"Text",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIVisionHelper",
					"<-"
				]
			],
			"Summary": ""
		},
		"chat": {
			"Syntax": "chat : cs.AIKit.OpenAIChatAPI"
		}
	},
	"OpenAIVisionHelper": {
		"prompt()": {
			"Syntax": "**.prompt**( *prompt* : Text; *parameters* : cs.AIKit.OpenAIChatCompletionsParameters ) : cs.AIKit.OpenAIChatCompletionsResult",
			"Params": [
				[
					"prompt",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIChatCompletionsParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"imageURL": {
			"Syntax": "imageURL : Text"
		},
		"chat": {
			"Syntax": "chat : cs.AIKit.OpenAIChatAPI"
		}
	},
	"OpenAIModerationResult": {
		"get moderation()": {
			"Syntax": "**.get moderation**() : cs.AIKit.OpenAIModeration",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIModeration",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIEmbeddingsParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"dimensions": {
			"Syntax": "dimensions : Integer"
		},
		"encoding_format": {
			"Syntax": "encoding_format : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"user": {
			"Syntax": "user : Text"
		},
		"extraHeaders": {
			"Syntax": "extraHeaders : Object"
		},
		"maxRetries": {
			"Syntax": "maxRetries : Real"
		},
		"onError": {
			"Syntax": "onError : 4D.Function"
		},
		"timeout": {
			"Syntax": "timeout : Real"
		},
		"throw": {
			"Syntax": "throw : Boolean"
		},
		"formula": {
			"Syntax": "formula : 4D.Function"
		},
		"onResponse": {
			"Syntax": "onResponse : 4D.Function"
		},
		"httpAgent": {
			"Syntax": "httpAgent : 4D.HTTPAgent"
		},
		"onTerminate": {
			"Syntax": "onTerminate : 4D.Function"
		}
	},
	"_OpenAIAsyncOptions": {
		"onData()": {
			"Syntax": "**.onData**( *request* : 4D.HTTPRequest; *event* : Object )",
			"Params": [
				[
					"request",
					"4D.HTTPRequest",
					"->"
				],
				[
					"event",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"onTerminate()": {
			"Syntax": "**.onTerminate**( *request* : 4D.HTTPRequest; *event* : Object )",
			"Params": [
				[
					"request",
					"4D.HTTPRequest",
					"->"
				],
				[
					"event",
					"Object",
					"->"
				]
			],
			"Summary": ""
		},
		"body": {
			"Syntax": "body : Variant"
		},
		"headers": {
			"Syntax": "headers : Object"
		},
		"timeout": {
			"Syntax": "timeout : Integer"
		},
		"dataType": {
			"Syntax": "dataType : Text"
		},
		"method": {
			"Syntax": "method : Text"
		}
	},
	"_FormDemo": {
		"onChatHelperReceiveStream()": {
			"Syntax": "**.onChatHelperReceiveStream**( *result* : cs.AIKit.OpenAIChatCompletionsStreamResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIChatCompletionsStreamResult",
					"->"
				]
			],
			"Summary": ""
		},
		"onChatHelperReceive()": {
			"Syntax": "**.onChatHelperReceive**( *result* : cs.AIKit.OpenAIChatCompletionsResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"->"
				]
			],
			"Summary": ""
		},
		"sendChatHelper()": {
			"Syntax": "**.sendChatHelper**()",
			"Params": [],
			"Summary": ""
		},
		"createChatHelper()": {
			"Syntax": "**.createChatHelper**()",
			"Params": [],
			"Summary": ""
		},
		"onModerationReceive()": {
			"Syntax": "**.onModerationReceive**( *result* : cs.AIKit.OpenAIModerationResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIModerationResult",
					"->"
				]
			],
			"Summary": ""
		},
		"onModelReceive()": {
			"Syntax": "**.onModelReceive**( *result* : cs.AIKit.OpenAIModelListResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIModelListResult",
					"->"
				]
			],
			"Summary": ""
		},
		"roleEmoticon()": {
			"Syntax": "**.roleEmoticon**( *role* : Text ) : Text",
			"Params": [
				[
					"role",
					"Text",
					"->"
				],
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"onVisionDroped()": {
			"Syntax": "**.onVisionDroped**()",
			"Params": [],
			"Summary": ""
		},
		"sendEmbeddings()": {
			"Syntax": "**.sendEmbeddings**()",
			"Params": [],
			"Summary": ""
		},
		"sendModeration()": {
			"Syntax": "**.sendModeration**()",
			"Params": [],
			"Summary": ""
		},
		"onVisionCliked()": {
			"Syntax": "**.onVisionCliked**()",
			"Params": [],
			"Summary": ""
		},
		"onEmbeddingsReceive()": {
			"Syntax": "**.onEmbeddingsReceive**( *result* : cs.AIKit.OpenAIEmbeddingsResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIEmbeddingsResult",
					"->"
				]
			],
			"Summary": ""
		},
		"onImageReceive()": {
			"Syntax": "**.onImageReceive**( *result* : cs.AIKit.OpenAIImagesResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIImagesResult",
					"->"
				]
			],
			"Summary": ""
		},
		"onClicked()": {
			"Syntax": "**.onClicked**()",
			"Params": [],
			"Summary": ""
		},
		"onChatReceive()": {
			"Syntax": "**.onChatReceive**( *result* : cs.AIKit.OpenAIChatCompletionsResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"->"
				]
			],
			"Summary": ""
		},
		"sendImage()": {
			"Syntax": "**.sendImage**()",
			"Params": [],
			"Summary": ""
		},
		"sendVision()": {
			"Syntax": "**.sendVision**()",
			"Params": [],
			"Summary": ""
		},
		"removeChatHelper()": {
			"Syntax": "**.removeChatHelper**()",
			"Params": [],
			"Summary": ""
		},
		"sendChat()": {
			"Syntax": "**.sendChat**()",
			"Params": [],
			"Summary": ""
		},
		"onLoad()": {
			"Syntax": "**.onLoad**()",
			"Params": [],
			"Summary": ""
		},
		"onVisionReceive()": {
			"Syntax": "**.onVisionReceive**( *result* : cs.AIKit.OpenAIChatCompletionsResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIChatCompletionsResult",
					"->"
				]
			],
			"Summary": ""
		},
		"onPageChange()": {
			"Syntax": "**.onPageChange**()",
			"Params": [],
			"Summary": ""
		},
		"onStreamChatReceive()": {
			"Syntax": "**.onStreamChatReceive**( *result* : cs.AIKit.OpenAIChatCompletionsStreamResult )",
			"Params": [
				[
					"result",
					"cs.AIKit.OpenAIChatCompletionsStreamResult",
					"->"
				]
			],
			"Summary": ""
		},
		"get client()": {
			"Syntax": "**.get client**() : cs.AIKit.OpenAI",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAI",
					"<-"
				]
			],
			"Summary": ""
		},
		"enableSendButton()": {
			"Syntax": "**.enableSendButton**( *enable* : Boolean )",
			"Params": [
				[
					"enable",
					"Boolean",
					"->"
				]
			],
			"Summary": ""
		},
		"get model()": {
			"Syntax": "**.get model**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"getModels()": {
			"Syntax": "**.getModels**()",
			"Params": [],
			"Summary": ""
		}
	},
	"OpenAIEmbeddingsResult": {
		"get vector()": {
			"Syntax": "**.get vector**() : 4D.Vector",
			"Params": [
				[
					"",
					"4D.Vector",
					"<-"
				]
			],
			"Summary": ""
		},
		"get vectors()": {
			"Syntax": "**.get vectors**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"get model()": {
			"Syntax": "**.get model**() : Text",
			"Params": [
				[
					"",
					"Text",
					"<-"
				]
			],
			"Summary": ""
		},
		"get embedding()": {
			"Syntax": "**.get embedding**() : cs.AIKit.OpenAIEmbedding",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIEmbedding",
					"<-"
				]
			],
			"Summary": ""
		},
		"get embeddings()": {
			"Syntax": "**.get embeddings**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIChatCompletionsParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"onData": {
			"Syntax": "onData : 4D.Function"
		},
		"prediction": {
			"Syntax": "prediction : Object"
		},
		"tools": {
			"Syntax": "tools : Collection"
		},
		"response_format": {
			"Syntax": "response_format : Object"
		},
		"reasoning_effort": {
			"Syntax": "reasoning_effort : Text"
		},
		"store": {
			"Syntax": "store : Boolean"
		},
		"tool_choice": {
			"Syntax": "tool_choice : Variant"
		},
		"temperature": {
			"Syntax": "temperature : Real"
		},
		"max_completion_tokens": {
			"Syntax": "max_completion_tokens : Integer"
		},
		"n": {
			"Syntax": "n : Integer"
		},
		"stream": {
			"Syntax": "stream : Boolean"
		},
		"stream_options": {
			"Syntax": "stream_options : Object"
		},
		"model": {
			"Syntax": "model : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"_Env": {},
	"OpenAIEmbedding": {
		"object": {
			"Syntax": "object : Text"
		},
		"embedding": {
			"Syntax": "embedding : 4D.Vector"
		},
		"index": {
			"Syntax": "index : Integer"
		}
	},
	"OpenAIModelsAPI": {
		"list()": {
			"Syntax": "**.list**( *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIModelListResult",
			"Params": [
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIModelListResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"retrieve()": {
			"Syntax": "**.retrieve**( *model* : Text; *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIModelResult",
			"Params": [
				[
					"model",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIModelResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIImagesResult": {
		"saveImagesToDisk()": {
			"Syntax": "**.saveImagesToDisk**( *folder* : 4D.Folder; *prefix* : Text ) : Boolean",
			"Params": [
				[
					"folder",
					"4D.Folder",
					"->"
				],
				[
					"prefix",
					"Text",
					"->"
				],
				[
					"",
					"Boolean",
					"<-"
				]
			],
			"Summary": ""
		},
		"get image()": {
			"Syntax": "**.get image**() : cs.AIKit.OpenAIImage",
			"Params": [
				[
					"",
					"cs.AIKit.OpenAIImage",
					"<-"
				]
			],
			"Summary": ""
		},
		"get images()": {
			"Syntax": "**.get images**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	},
	"OpenAIChatCompletionsListParameters": {
		"body()": {
			"Syntax": "**.body**() : Object",
			"Params": [
				[
					"",
					"Object",
					"<-"
				]
			],
			"Summary": ""
		},
		"model": {
			"Syntax": "model : Text"
		},
		"order": {
			"Syntax": "order : Text"
		},
		"limit": {
			"Syntax": "limit : Integer"
		},
		"metadata": {
			"Syntax": "metadata : Text"
		},
		"after": {
			"Syntax": "after : Text"
		},
		"_inheritedFrom_": "OpenAIParameters"
	},
	"OpenAIEmbeddingsAPI": {
		"create()": {
			"Syntax": "**.create**( *input* : Variant; *model* : Text; *parameters* : cs.AIKit.OpenAIEmbeddingsParameters ) : cs.AIKit.OpenAIEmbeddingsResult",
			"Params": [
				[
					"input",
					"Variant",
					"->"
				],
				[
					"model",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIEmbeddingsParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIEmbeddingsResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIModerationsAPI": {
		"create()": {
			"Syntax": "**.create**( *input* : Variant; *model* : Text; *parameters* : cs.AIKit.OpenAIParameters ) : cs.AIKit.OpenAIModerationResult",
			"Params": [
				[
					"input",
					"Variant",
					"->"
				],
				[
					"model",
					"Text",
					"->"
				],
				[
					"parameters",
					"cs.AIKit.OpenAIParameters",
					"->"
				],
				[
					"",
					"cs.AIKit.OpenAIModerationResult",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIAPIResource"
	},
	"OpenAIModelListResult": {
		"get models()": {
			"Syntax": "**.get models**() : Collection",
			"Params": [
				[
					"",
					"Collection",
					"<-"
				]
			],
			"Summary": ""
		},
		"_inheritedFrom_": "OpenAIResult"
	}
}